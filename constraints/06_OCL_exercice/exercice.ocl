-- Copyright 2016 Alexandre Terrasa <alexandre@moz-code.org>.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

package inf3143::exercice

context Societe

	-- Dans une société, le directeur est un employé
	inv: postes.collect(employe)->includes(directeur)
	
	-- Le directeur n'est pas chômeur
	inv: not(directeur.chomeur)
	
	-- Le directeur doit avoir plus de 40 ans.
	inv: self.directeur.age > 40
	
	-- De plus, une société possède exactement un directeur et au moins un employé.
	inv: directeur <> null

context Personne

	-- Une personne considérée comme au chômage ne doit pas avoir des revenus supérieurs à 100 $.
 	inv:
  		let revenus : Real = self.collect(postes).collect(salaire)->sum() in
     		if chomeur then
       			revenus < 100
     		else
       			revenus >= 100
     		endif

	-- Une personne possède au plus deux parents.
	inv: parents->size() <= 2
	
	-- Si une personne possède deux parents, l'un est une femme et l'autre un homme.
	inv: parents->size() = 2 implies (
			parents->exists(genre = Genre::homme)
		and
			parents->exists(genre = Genre::femme))
	
	-- Tous les enfants d'une personne ont bien cette personne comme parent et inversement.
	inv: enfants->notEmpty() implies
			enfants->forAll( p : Personne | p.parents->includes(self))
		
	inv: parents->notEmpty() implies
			parents->forAll ( p : Personne | p.enfants->includes(self))
		
endpackage

